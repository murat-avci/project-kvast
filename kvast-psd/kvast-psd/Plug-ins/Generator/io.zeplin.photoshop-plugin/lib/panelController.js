function apiCall(e){var t=Q.defer();return utils.getToken().then(function(o){request.get({url:e,headers:{"Zeplin-Token":o},timeout:3e4},function(e,o,r){if(e||200!=o.statusCode)o&&(_logger.log("received status code:",o.statusCode),401==o.statusCode&&(e=new Error("token error"),e.token=!0),410!=o.statusCode&&404!=o.statusCode||(e=new Error("evict cache"),e.evict=!0)),_logger.log("error:",e),t.reject(e);else{_logger.log("received status code:",o.statusCode);var n=JSON.parse(r);t.resolve(n)}})},function(e){_logger.log(e.stack),t.reject(e)}),t.promise}function fetchProjects(){return apiCall(utils.API_URL+"/v2/projects")}function fetchOrganizationProjects(e){return apiCall(utils.API_URL+"/organizations/"+e+"/projects")}function fetchOrganizations(){return apiCall(utils.API_URL+"/organizations")}function fetchOrganizationMemberProfile(e){return utils.getToken().then(function(t){var o=jwtDecode(t);return apiCall(utils.API_URL+"/organizations/"+e+"/members/"+(o.sub||o.uid)+"/profile")})}function initiateExport(e){_logger.log("export initiated.."),Q.all([e?fetchOrganizationProjects(e):fetchProjects(),fetchOrganizations(),utils.getToken().then(function(e){return jwtDecode(e)}),zeplin.predictProjectDensity()]).then(function(t){var o=t[0],r=t[1],n=t[2],i=t[3];_logger.log("predicted density: "+JSON.stringify(i)),_cachedProjects=o.projects;var c=processProjects(o.projects,e,n.sub||n.uid),s={},l=r.organizations.filter(function(e){return"active"===e.status}).map(function(e){return{oid:e._id,name:e.name}}),u=[];return l.length>0&&(u=l.map(function(e){return fetchOrganizationMemberProfile(e.oid).then(function(t){s[e.oid]=t.role})})),Q.all(u).then(function(){var t={projects:c,organizations:l,profiles:s,oid:e,predictedDensity:i};_logger.log("emitting projectsWithOrganizations"),socket.emit("projectsWithOrganizations",JSON.stringify(t)),_logger.log("emitting projects"),socket.emit("projects",JSON.stringify(c))})})["catch"](function(e){_logger.log("error retrieving projects:",e);var t;e&&"ETIMEDOUT"==e.code&&1==e.connect&&(_logger.log("connection timeout!!"),t="timeout"),!e||"ENOENT"!=e.code&&1!=e.token?e&&1==e.evict?(_logger.log("evict cache error!!"),t="evict_cache"):t="error":(_logger.log("token error!!"),t="token_not_found"),socket.emit("zeplinError",{type:t,message:"Error retrieving projects from Zeplin!"})})}function proceedExport(e){_logger.log("exporting selected artboards for project:",e),utils.getToken().then(function(t){if(e.oid)_logger.log("project belongs to organization:",e.oid);else{_logger.log("authorizing user for screen export..");var o=jwtDecode(t),r=_cachedProjects.filter(function(t){return t._id==e.pid})[0];if(r){var n=r.users.filter(function(e){return"owner"==e.role})[0];if(n&&"free"==n.user.paymentPlan&&n.user._id!==(o.sub||o.uid))throw socket.emit("zeplinError",{type:"plan",title:"Can't import artboards to \""+r.name+'"',message:'Only the project owner can upload designs under a "Free" plan, please contact the owner ('+n.user.username+")."}),new Error("planError")}}}).then(function(){zeplin["export"](_currentDocumentId,e,socket)})["catch"](function(e){_logger.log(e.stack)})}function processProjects(e,t,o){return e.filter(function(e){return"active"===e.status&&(!t||isUserJoined(e,o))}).filter(function(e){return!t||t&&isOrganizationProject(e)}).map(function(e){return{pid:e._id,type:e.type,name:e.name,density:e.density,icon:e.icon}}).sort(function(e,t){var o=e.name.toLowerCase(),r=t.name.toLowerCase();return o>r})}function isUserJoined(e,t){if(e&&t)for(var o=0;o<e.users.length;o++)if(e.users[o]&&e.users[o].user&&e.users[o].user._id===t)return!0;return!1}function isOrganizationProject(e){if(e&&e.users&&e.users.length>0)return ORGANIZATION_ROLES.indexOf(e.users[0].role)!==-1}function getProjects(e){utils.getToken().then(function(t){var o=jwtDecode(t),r=e?fetchOrganizationProjects(e):fetchProjects();return r.then(function(t){_cachedProjects=t.projects;var r=processProjects(t.projects,e,o.sub||o.uid);_logger.log("emitting projects"),socket.emit("projects",JSON.stringify(r)),_logger.log("emitting projectsV2"),socket.emit("projectsV2",JSON.stringify(r))})})["catch"](function(e){_logger.log("error retrieving projects:",e);var t;e&&"ETIMEDOUT"==e.code&&1==e.connect&&(_logger.log("connection timeout!!"),t="timeout"),e&&"ENOENT"==e.code?(_logger.log("token not found!!"),t="token_not_found"):t="error",socket.emit("zeplinError",{type:t,message:"Error retrieving projects from Zeplin!"})})}function renameLayer(e){_logger.log("renaming:",e),e["export"]?zeplin.setLayerFlag(utils.EXPORT_FLAG,e.layers||e.layer,e.checked):e.skip&&zeplin.setLayerFlag(utils.SKIP_FLAG,e.layers||e.layer,e.checked)}function initPanelCommunication(){zeplin.triggerPanelUpdate(socket,_currentDocumentId),socket.on("getProjects",function(e){getProjects(e)}),socket.on("initiate",function(e){initiateExport(e&&e.oid)}),socket.on("export",function(e){proceedExport(e)}),socket.on("rename",function(e){renameLayer(e)}),socket.on("openZeplin",function(){_logger.log("opening zeplin.."),utils.openZeplin()}),socket.on("error",function(e){_logger.log("socket error:",e)}),socket.on("close",function(e){_logger.log("socket closed:",e),socket=void 0})}var Q=require("q"),jwtDecode=require("jwt-decode"),request=require("request"),utils=require("./utils"),ORGANIZATION_ROLES=["pawn","knight","rook","queen","king"],zeplin=null,socket=null,_logger=null,_currentDocumentId=null,_cachedProjects=null,PanelController=function(e,t,o){zeplin=e,socket=t,_logger=o,socket.onConnection(initPanelCommunication)};PanelController.prototype.setCurrentDocumentId=function(e){_currentDocumentId!==e&&(_currentDocumentId=e)},module.exports=PanelController;